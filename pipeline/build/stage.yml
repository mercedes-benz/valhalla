parameters:
  name: null
  variables: []

stages:
  - stage: ${{ parameters.name }}
    displayName: ${{ parameters.name }}
    variables:
      - ${{ each group in parameters.variables }}:
          - group: ${{ group }}

    jobs:
      - job: ${{ parameters.name }}
        displayName: ${{ parameters.name }}
        pool:
          vmImage: ubuntu-18.04
        steps:
          - checkout: self
            clean: true
            persistCredentials: true
          
          #- task: DownloadSecureFile@1
          #  name: sonarcert
          #  displayName: Sonar Certificate
          #  inputs:
          #    secureFile: gsep-sonar.pfx

          - bash: |
              source pipeline/build/scripts/10-validate.sh
            name: validate
            displayName: Validate
            env:
              APP_REGISTRY_PASSWORD: $(app.registry.password)
              SHARED_CLIENT_SECRET: $(shared.client.secret)

          - bash: |
              source pipeline/build/scripts/11-version.sh
            name: version
            displayName: Version

          #- bash: |
          #    source pipeline/build/scripts/20-scan.sh
          #  name: scan
          #  displayName: Scanners
          #  env:
          #    SONAR_TOKEN: $(sonar.token)
          #    SONAR_CERT_PATH: $(sonarcert.secureFilePath)
          #    SONAR_CERT_PASS: $(sonar.cert.passphrase)
          #    BLACKDUCK_API_TOKEN: $(blackduck.api.token)

          - bash: |
              source pipeline/build/scripts/21-acr-cleanup.sh
            name: acrCleanup
            displayName: ACR Cleanup
            condition: and(succeeded(), eq(variables['run.acr.cleanup'], 'true'))
            continueOnError: true
            env:
              SHARED_CLIENT_SECRET: $(shared.client.secret)

          - bash: |
              source pipeline/build/scripts/30-package.sh
            name: package
            displayName: Package
            env:
              APP_REGISTRY_PASSWORD: $(app.registry.password)